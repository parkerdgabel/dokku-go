app-json:report [<app>] [<flag>]                                                             Displays a app-json report for one or more apps
app-json:set <app> <property> (<value>)                                                      Set or clear a app-json property for an app

apps:clone <old-app> <new-app>                                                               Clones an app
apps:create <app>                                                                            Create a new app
apps:destroy <app>                                                                           Permanently destroy an app
apps:exists <app>                                                                            Checks if an app exists
apps:list                                                                                    List your apps
apps:lock <app>                                                                              Locks an app for deployment
apps:locked <app>                                                                            Checks if an app is locked for deployment
apps:rename <old-app> <new-app>                                                              Rename an app
apps:report [<app>] [<flag>]                                                                 Display report about an app
apps:unlock <app>                                                                            Unlocks an app for deployment

builder-dockerfile:report [<app>] [<flag>]                                                   Displays a builder-dockerfile report for one or more apps
builder-dockerfile:set <app> <property> (<value>)                                            Set or clear a builder-dockerfile property for an app

builder-pack:report [<app>] [<flag>]                                                         Displays a builder-pack report for one or more apps
builder-pack:set <app> <property> (<value>)                                                  Set or clear a builder-pack property for an app

builder:report [<app>] [<flag>]                                                              Displays a builder report for one or more apps
builder:set <app> <property> (<value>)                                                       Set or clear a builder property for an app

buildpacks:add [--index 1] <app> <buildpack>                                                 Add new app buildpack while inserting into list of buildpacks if necessary
buildpacks:clear <app>                                                                       Clear all buildpacks set on the app
buildpacks:list <app>                                                                        List all buildpacks for an app
buildpacks:remove <app> <buildpack>                                                          Remove a buildpack set on the app
buildpacks:report [<app>] [<flag>]                                                           Displays a buildpack report for one or more apps
buildpacks:set [--index 1] <app> <buildpack>                                                 Set new app buildpack at a given position defaulting to the first buildpack if no index is specified
buildpacks:set-property [--global|<app>] <key> <value>                                       Set or clear a buildpacks property for an app

certs:add <app> CRT KEY                                                                      Add an ssl endpoint to an app. Can also import from a tarball on stdin
certs:chain CRT [CRT ...]                                                                    [NOT IMPLEMENTED] Print the ordered and complete chain for the given certificate
certs:generate <app> DOMAIN                                                                  Generate a key and certificate signing request (and self-signed certificate)
certs:key <app> CRT KEY [KEY ...]                                                            [NOT IMPLEMENTED] Print the correct key for the given certificate
certs:remove <app>                                                                           Remove an SSL Endpoint from an app
certs:report [<app>] [<flag>]                                                                Displays an ssl report for one or more apps
certs:rollback <app>                                                                         [NOT IMPLEMENTED] Rollback an SSL Endpoint for an app
certs:show <app> <crt|key>                                                                   Show the server.crt or server.key on stdout
certs:update <app> CRT KEY                                                                   Update an SSL Endpoint on an app. Can also import from a tarball on stdin

checks:disable <app> [process-type(s)]                                                       Disable zero-downtime deployment for all processes (or comma-separated process-type list) ***WARNING: this will cause downtime during deployments***
checks:enable <app> [process-type(s)]                                                        Enable zero-downtime deployment for all processes (or comma-separated process-type list)
checks:report [<app>] [<flag>]                                                               Displays a checks report for one or more apps
checks:run <app> [process-type(s)]                                                           Runs zero-downtime checks for all processes (or comma-separated process-type list)
checks:skip <app> [process-type(s)]                                                          Skip zero-downtime checks for all processes (or comma-separated process-type list)

cleanup [<app>]                                                                              Cleans up exited/dead Docker containers and removes dangling images

config (<app>|--global)                                                                      Pretty-print an app or global environment
config:bundle [--merged] (<app>|--global)                                                    Bundle environment into tarfile
config:clear [--no-restart] (<app>|--global)                                                 Clears environment variables
config:export [--format=FORMAT] [--merged] (<app>|--global)                                  Export a global or app environment
config:get [--quoted] (<app>|--global) KEY                                                   Display a global or app-specific config value
config:keys [--merged] (<app>|--global)                                                      Show keys set in environment
config:set [--encoded] [--no-restart] (<app>|--global) KEY1=VALUE1 [KEY2=VALUE2 ...]         Set one or more config vars
config:show [--merged] (<app>|--global)                                                      Show keys set in environment
config:unset [--no-restart] (<app>|--global) KEY1 [KEY2 ...]                                 Unset one or more config vars

cron:list <app>                                                                              List scheduled cron tasks for an app
cron:report [<app>] [<flag>]                                                                 Display report about an app

docker-options:add <app> <phase(s)> OPTION                                                   Add Docker option to app for phase (comma separated phase list)
docker-options:clear <app> [phase(s)]                                                        Clear a docker options from application with an optional phase (comma separated phase list)
docker-options:remove <app> <phase(s)> OPTION                                                Remove Docker option from app for phase (comma separated phase list)
docker-options:report [<app>] [<flag>]                                                       Displays a docker options report for one or more apps

domains:add <app> <domain> [<domain> ...]                                                    Add domains to app
domains:add-global <domain> [<domain> ...]                                                   Add global domain names
domains:clear <app>                                                                          Clear all domains for app
domains:clear-global                                                                         Clear global domain names
domains:disable <app>                                                                        Disable VHOST support
domains:enable <app>                                                                         Enable VHOST support
domains:remove <app> <domain> [<domain> ...]                                                 Remove domains from app
domains:remove-global <domain> [<domain> ...]                                                Remove global domain names
domains:report [<app>|--global] [<flag>]                                                     Displays a domains report for one or more apps
domains:set <app> <domain> [<domain> ...]                                                    Set domains for app
domains:set-global <domain> [<domain> ...]                                                   Set global domain names

enter <app> [<container-type> || --container-id <container-id>]                              Connect to a specific app container

events [-t]                                                                                  Show the last events (-t follows)
events:list                                                                                  List logged events
events:off                                                                                   Disable events logger
events:on                                                                                    Enable events logger

git:allow-host <host>                                                                        Adds a host to known_hosts
git:auth <host> [<username> <password>]                                                      Configures netrc authentication for a given git server
git:from-archive <app> <archive-url> [<git-username> <git-email>]                            Updates an app's git repository with a given archive file
git:from-image <app> <docker-image> [<git-username> <git-email>]                             Updates an app's git repository with a given docker image
git:initialize <app>                                                                         Initialize a git repository for an app
git:public-key                                                                               Outputs the dokku public deploy key
git:report [<app>] [<flag>]                                                                  Displays a git report for one or more apps
git:set <app> <property> (<value>)                                                           Set or clear a git property for an app
git:sync [--build] <app> <repository> [<git-ref>]                                            Clone or fetch an app from remote git repo
git:unlock <app> [--force]                                                                   Removes previous git clone folder for new deployment 

help                                                                                         Print the list of commands

logs [-h|--help] [-t|--tail] [-n|--num num] [-q|--quiet] [-p|--ps process] <app>             Display recent log output
logs:failed [--all|<app>]                                                                    Shows the last failed deploy logs
logs:report [<app>] [<flag>]                                                                 Displays a logs report for one or more apps
logs:set [--global|<app>] <key> <value>                                                      Set or clear a logs property for an app
logs:vector-logs [--num num] [--tail]                                                        Display vector log output
logs:vector-start                                                                            Start the vector logging container
logs:vector-stop                                                                             Stop the vector logging container

network:create <network>                                                                     Creates an attachable docker network
network:destroy <network>                                                                    Destroys a docker network
network:exists <network>                                                                     Checks if a docker network exists
network:info <network>                                                                       Outputs information about a docker network
network:list                                                                                 Lists all docker networks
network:rebuild <app>                                                                        Rebuilds network settings for an app
network:rebuildall                                                                           Rebuild network settings for all apps
network:report [<app>] [<flag>]                                                              Displays a network report for one or more apps
network:set <app> <property> (<value>)                                                       Set or clear a network property for an app

nginx:access-logs <app> [-t]                                                                 Show the nginx access logs for an application (-t follows)
nginx:error-logs <app> [-t]                                                                  Show the nginx error logs for an application (-t follows)
nginx:report [<app>] [<flag>]                                                                Displays an nginx report for one or more apps
nginx:set <app> <property> (<value>)                                                         Set or clear an nginx property for an app
nginx:show-config <app>                                                                      Display app nginx config
nginx:validate-config [<app>] [--clean]                                                      Validates and optionally cleans up invalid nginx configurations

plugin:disable <name>                                                                        Disable an installed plugin (third-party only)
plugin:enable <name>                                                                         Enable a previously disabled plugin
plugin:install [--core|git-url [--committish tag|branch|commit|--name custom-plugin-name]]   Optionally download git-url (with custom tag/committish) & run install trigger for active plugins (or only core ones)
plugin:install-dependencies [--core]                                                         Run install-dependencies trigger for active plugins (or only core ones)
plugin:list                                                                                  Print active plugins
plugin:trigger <args...>                                                                     Trigger an arbitrary plugin hook
plugin:uninstall <name>                                                                      Uninstall a plugin (third-party only)
plugin:update [name [committish]]                                                            Optionally update named plugin from git (with custom tag/committish) & run update trigger for active plugins

proxy:build-config [--parallel count] [--all|<app>]                                          (Re)builds config for a given app
proxy:clear-config [--all|<app>]                                                             Clears config for a given app
proxy:disable <app>                                                                          Disable proxy for app
proxy:enable <app>                                                                           Enable proxy for app
proxy:ports <app>                                                                            List proxy port mappings for app
proxy:ports-add <app> [<scheme>:<host-port>:<container-port>...]                             Add proxy port mappings to an app
proxy:ports-clear <app>                                                                      Clear all proxy port mappings for an app
proxy:ports-remove <app> [<host-port>|<scheme>:<host-port>:<container-port>...]              Remove specific proxy port mappings from an app
proxy:ports-set <app> [<scheme>:<host-port>:<container-port>...]                             Set proxy port mappings for an app
proxy:report [<app>] [<flag>]                                                                Displays a proxy report for one or more apps
proxy:set <app> <proxy-type>                                                                 Set proxy type for app

ps:inspect <app>                                                                             Displays a sanitized version of docker inspect for an app
ps:rebuild [--parallel count] [--all|<app>]                                                  Rebuilds an app from source
ps:report [<app>] [<flag>]                                                                   Displays a process report for one or more apps
ps:restart [--parallel count] [--all|<app>] [<process-name>]                                 Restart an app
ps:restore [<app>]                                                                           Start previously running apps e.g. after reboot
ps:scale [--skip-deploy] <app> <proc>=<count> [<proc>=<count>...]                            Get/Set how many instances of a given process to run
ps:set <app> <key> <value>                                                                   Set or clear a ps property for an app
ps:start [--parallel count] [--all|<app>]                                                    Start an app
ps:stop [--parallel count] [--all|<app>]                                                     Stop an app

registry:login [--password-stdin] <server> <username> [<password>]                           Login to a docker registry
registry:report [<app>] [<flag>]                                                             Displays a registry report for one or more apps
registry:set <app> <property> (<value>)                                                      Set or clear a registry property for an app

repo:gc <app>                                                                                Runs 'git gc --aggressive' against the application's repo
repo:purge-cache <app>                                                                       Deletes the contents of the build cache stored in the repository

resource:limit [--process-type <process-type>] [RESOURCE_OPTS...] <app>                      Limit resources for a given app/process-type combination
resource:limit-clear [--process-type <process-type>] <app>                                   Limit resources for a given app/process-type combination
resource:report [<app>] [<flag>]                                                             Displays a resource report for one or more apps
resource:reserve [--process-type <process-type>] [RESOURCE_OPTS...] <app>                    Reserve resources for a given app/process-type combination
resource:reserve-clear [--process-type <process-type>] <app>                                 Reserve resources for a given app/process-type combination

run [-e|--env KEY=VALUE] [--no-tty] <app> <cmd>                                              Run a command in a new container using the current app image
run:detached [-e|-env KEY=VALUE] [--no-tty] <app> <cmd>                                      Run a command in a new detached container using the current app image
run:list <app>                                                                               List all run containers for an app

scheduler-docker-local:report [<app>] [<flag>]                                               Displays a scheduler-docker-local report for one or more apps
scheduler-docker-local:set <app> <property> (<value>)                                        Set or clear a scheduler-docker-local property for an app

scheduler:report [<app>] [<flag>]                                                            Displays a scheduler report for one or more apps
scheduler:set <app> <property> (<value>)                                                     Set or clear a scheduler property for an app

shell                                                                                        Spawn dokku shell

ssh-keys:add <name> [/path/to/key]                                                           Add a new public key by pipe or path
ssh-keys:list [--format text|json] [<name>]                                                  List of all authorized dokku public ssh keys
ssh-keys:remove [--fingerprint fingerprint|<name>]                                           Remove SSH public key by name

storage:ensure-directory [--chown option] <directory>                                        Creates a persistent storage directory in the recommended storage path
storage:list <app>                                                                           List bind mounts for app's container(s) (host:container)
storage:mount <app> <host-dir:container-dir>                                                 Create a new bind mount
storage:report [<app>] [<flag>]                                                              Displays a checks report for one or more apps
storage:unmount <app> <host-dir:container-dir>                                               Remove an existing bind mount

trace:off                                                                                    Disable trace mode
trace:on                                                                                     Enable trace mode

url <app>                                                                                    Show the first URL for an application (compatibility)

urls <app>                                                                                   Show all URLs for an application

version                                                                                      Print dokku's version

letsencrypt:auto-renew <app>            Auto-renew app if renewal is necessary
letsencrypt:auto-renew                  Auto-renew all apps secured by letsencrypt if renewal is necessary
letsencrypt:cleanup <app>               Remove stale certificate directories for app
letsencrypt:cron-job [--add --remove]   Add or remove a cron job that periodically calls auto-renew.
letsencrypt:disable <app>               Disable letsencrypt for an app
letsencrypt:enable <app>                Enable or renew letsencrypt for an app
letsencrypt:help                        Display letsencrypt help
letsencrypt:list                        List letsencrypt-secured apps with certificate expiry times
letsencrypt:revoke <app>                Revoke letsencrypt certificate for app
